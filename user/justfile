target := "riscv64gc-unknown-none-elf"
mode := "release"
app_dir := "src/bin"
target_dir := "target" / target / mode

objcopy := "rust-objcopy --binary-architecture=riscv64"

base_address := "0x80400000"
step := "0x20000"
linker := "src/linker.ld"

build:
    #!/usr/bin/env python3
    import os
    import subprocess

    with open("{{linker}}") as f:
        raw_linker = f.read()

    apps = os.listdir("{{app_dir}}")
    apps.sort()
    for app_id, app in enumerate(apps):
        base = os.path.splitext(app)[0]
        elf_target = os.path.join("{{target_dir}}", base)
        bin_target = elf_target + ".bin"

        app_address = {{base_address}} + {{step}} * app_id
        new_linker = raw_linker.replace(
            hex({{base_address}}), hex(app_address)
        )
        with open("{{linker}}", "w") as f:
            f.write(new_linker)

        print(f"Building {elf_target} from {{app_dir}}/{app}")
        print(f"Application {app} start with address {hex(app_address)}")
        subprocess.run(
            ["cargo", "build", "--target", "{{target}}", "--release", "--bin", base],
            check=True,
        )

        subprocess.run(
            [
                "rust-objcopy",
                "--binary-architecture=riscv64",
                elf_target,
                "--strip-all",
                "-O",
                "binary",
                bin_target,
            ],
            check=True,
        )

        with open("{{linker}}", "w") as f:
            f.write(raw_linker)
